//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Collections.Generic;
using System.Text;
using RosMessageGeneration;
using RosMessageTypes.Std;

namespace RosMessageTypes.Rosgraph
{
    public class TopicStatistics : Message
    {
        public const string RosMessageName = "rosgraph_msgs/TopicStatistics";

        //  name of the topic
        public string topic;
        //  node id of the publisher
        public string node_pub;
        //  node id of the subscriber
        public string node_sub;
        //  the statistics apply to this time window
        public Time window_start;
        public Time window_stop;
        //  number of messages delivered during the window
        public int delivered_msgs;
        //  numbers of messages dropped during the window
        public int dropped_msgs;
        //  traffic during the window, in bytes
        public int traffic;
        //  mean/stddev/max period between two messages
        public Duration period_mean;
        public Duration period_stddev;
        public Duration period_max;
        //  mean/stddev/max age of the message based on the
        //  timestamp in the message header. In case the
        //  message does not have a header, it will be 0.
        public Duration stamp_age_mean;
        public Duration stamp_age_stddev;
        public Duration stamp_age_max;

        public TopicStatistics()
        {
            this.topic = "";
            this.node_pub = "";
            this.node_sub = "";
            this.window_start = new Time();
            this.window_stop = new Time();
            this.delivered_msgs = 0;
            this.dropped_msgs = 0;
            this.traffic = 0;
            this.period_mean = new Duration();
            this.period_stddev = new Duration();
            this.period_max = new Duration();
            this.stamp_age_mean = new Duration();
            this.stamp_age_stddev = new Duration();
            this.stamp_age_max = new Duration();
        }

        public TopicStatistics(string topic, string node_pub, string node_sub, Time window_start, Time window_stop, int delivered_msgs, int dropped_msgs, int traffic, Duration period_mean, Duration period_stddev, Duration period_max, Duration stamp_age_mean, Duration stamp_age_stddev, Duration stamp_age_max)
        {
            this.topic = topic;
            this.node_pub = node_pub;
            this.node_sub = node_sub;
            this.window_start = window_start;
            this.window_stop = window_stop;
            this.delivered_msgs = delivered_msgs;
            this.dropped_msgs = dropped_msgs;
            this.traffic = traffic;
            this.period_mean = period_mean;
            this.period_stddev = period_stddev;
            this.period_max = period_max;
            this.stamp_age_mean = stamp_age_mean;
            this.stamp_age_stddev = stamp_age_stddev;
            this.stamp_age_max = stamp_age_max;
        }
        public override List<byte[]> SerializationStatements()
        {
            var listOfSerializations = new List<byte[]>();
            listOfSerializations.Add(SerializeString(this.topic));
            listOfSerializations.Add(SerializeString(this.node_pub));
            listOfSerializations.Add(SerializeString(this.node_sub));
            listOfSerializations.AddRange(window_start.SerializationStatements());
            listOfSerializations.AddRange(window_stop.SerializationStatements());
            listOfSerializations.Add(BitConverter.GetBytes(this.delivered_msgs));
            listOfSerializations.Add(BitConverter.GetBytes(this.dropped_msgs));
            listOfSerializations.Add(BitConverter.GetBytes(this.traffic));
            listOfSerializations.AddRange(period_mean.SerializationStatements());
            listOfSerializations.AddRange(period_stddev.SerializationStatements());
            listOfSerializations.AddRange(period_max.SerializationStatements());
            listOfSerializations.AddRange(stamp_age_mean.SerializationStatements());
            listOfSerializations.AddRange(stamp_age_stddev.SerializationStatements());
            listOfSerializations.AddRange(stamp_age_max.SerializationStatements());

            return listOfSerializations;
        }

        public override int Deserialize(byte[] data, int offset)
        {
            var topicStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.topic = DeserializeString(data, offset, topicStringBytesLength);
            offset += topicStringBytesLength;
            var node_pubStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.node_pub = DeserializeString(data, offset, node_pubStringBytesLength);
            offset += node_pubStringBytesLength;
            var node_subStringBytesLength = DeserializeLength(data, offset);
            offset += 4;
            this.node_sub = DeserializeString(data, offset, node_subStringBytesLength);
            offset += node_subStringBytesLength;
            offset = this.window_start.Deserialize(data, offset);
            offset = this.window_stop.Deserialize(data, offset);
            this.delivered_msgs = BitConverter.ToInt32(data, offset);
            offset += 4;
            this.dropped_msgs = BitConverter.ToInt32(data, offset);
            offset += 4;
            this.traffic = BitConverter.ToInt32(data, offset);
            offset += 4;
            offset = this.period_mean.Deserialize(data, offset);
            offset = this.period_stddev.Deserialize(data, offset);
            offset = this.period_max.Deserialize(data, offset);
            offset = this.stamp_age_mean.Deserialize(data, offset);
            offset = this.stamp_age_stddev.Deserialize(data, offset);
            offset = this.stamp_age_max.Deserialize(data, offset);

            return offset;
        }

    }
}
